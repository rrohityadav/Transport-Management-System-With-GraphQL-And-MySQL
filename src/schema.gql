# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type DepartureArrival {
  date: String!
  time: String!
  location: String!
}

type Trip {
  createdAt: DateTime!
  updatedAt: DateTime!
  id: Int!
  departure: DepartureArrival!
  arrival: DepartureArrival!

  """Estimated duration of the trip in hours"""
  estimatedDuration: Int!
  approxDistance: Int!
  fare: Int!
  vehicle: Vehicle!
  status: BaseStatus!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum BaseStatus {
  active
  inactive
}

type VehicleInfo {
  title: String!
  numberPlate: String!
  model: String!
  manufacturer: String!
  registrationDate: String!
  type: VehicleType!
}

enum VehicleType {
  car
  bus
  truck
  motorcycle
  van
  bicycle
  other
}

type Vehicle {
  id: Int!
  info: VehicleInfo!
  driver: MinimalUser
  conductor: MinimalUser
  status: BaseStatus!
}

type User {
  id: Int!
  fullName: String!
  username: String!
  email: String!
  role: UserRole!
  age: Int
  vehicles: [Vehicle!]
  vehiclesAsConductor: [Vehicle!]
}

enum UserRole {
  admin
  driver
  conductor
  user
}

type MinimalUser {
  fullName: String!
}

type AuthResponse {
  user: User!
  access_token: String!
}

type Query {
  users: [User!]!
  user(payload: QueryUserArg!): User!
  protectedData: String!
  vehicles: [Vehicle!]!
  vehicle(payload: QueryVehicleArgs!): Vehicle!
  trips: [Trip!]!
  trip(payload: QueryTripArgs!): Trip!
}

input QueryUserArg {
  id: Int!
}

input QueryVehicleArgs {
  id: Float!
}

input QueryTripArgs {
  id: Float!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): Int!
  updateUserPassword(updatePasswordInput: UpdatePasswordInput!): String!
  removeUser(id: Int!): String!
  login(input: LoginInput!): AuthResponse!
  createVehicle(createVehicleInput: CreateVehicleInput!): Vehicle!
  updateVehicleInfo(updateVehicleInfoInput: UpdateVehicleInfoInput!): Int!
  removeVehicle(id: Int!): Int!
  createTrip(createTripInput: CreateTripInput!): Trip!
  updateTrip(updateTripInput: UpdateTripInput!): Int!
  removeTrip(id: Int!): Int!
}

input CreateUserInput {
  username: String!
  password: String!
  email: String!
  age: Int
  fullName: String!
  role: UserRole!
}

input UpdateUserInput {
  id: Int!
  fullName: String
  email: String
  age: Int
  role: UserRole
}

input UpdatePasswordInput {
  id: Int!
  password: String!
}

input LoginInput {
  username: String!
  password: String!
}

input CreateVehicleInput {
  info: VehicleInfoInput!
  driverId: Int
  conductorId: Int
}

input VehicleInfoInput {
  title: String!
  numberPlate: String!
  model: String!
  manufacturer: String!
  registrationDate: String!
  type: VehicleType!
}

input UpdateVehicleInfoInput {
  id: Int!
  info: VehicleInfoInput!
}

input CreateTripInput {
  departure: DepartureArrivalInput!
  arrival: DepartureArrivalInput!

  """Estimated duration of the trip in hours"""
  estimatedDuration: Int!
  approxDistance: Int!
  fare: Int!
  vehicleId: Int!
}

input DepartureArrivalInput {
  date: String!
  time: String!
  location: String!
}

input UpdateTripInput {
  departure: DepartureArrivalInput
  arrival: DepartureArrivalInput

  """Estimated duration of the trip in hours"""
  estimatedDuration: Int
  approxDistance: Int
  fare: Int
  vehicleId: Int
  id: Int!
}